{
  "hash": "2079a563d4bd33761e8bcead54aa3278",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 8: Programming with Data\"\nauthor: \"Lindsay Poirier\"\nbibliography: ../IntroDS.bib\nformat:\n  html:\n    code-fold: false\n    df-print: paged\nexecute: \n  echo: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\neditor: source\n---\n\n\n## Introduction\n\nIn this lab, we will program some custom `R` functions that allow us to analyze data related to medical conflicts of interest. Specifically, we will determine which ten Massachusetts-based doctors received the most money from pharmaceutical or medical device manufacturers in 2024. Then we will leverage our custom functions to produce a number of tables and plots documenting information about the payments made to each of these doctors. In doing so, we will update a similar analysis produced by ProPublica in 2018 called [*Dollars for Docs*](https://projects.propublica.org/docdollars/).\n\n### Learning Goals\n\n-   Write custom `R` functions \n-   Iterate a function over the values in a vector, using the family of map functions\n-   Practice data cleaning and wrangling\n\n## Review of Key Terms\n\n::: callout-tip\nYou may wish to reference this [purrr Cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/purrr.pdf) when completing this lab.\n:::\n\nFunction\n\n:   a series of statements that returns a value or performs a task \n\nIteration \n\n:   repeating a task over a series of values, vectors, or lists\n\n## CMS's Open Payments Dataset\n\nIn 2010, the the Physician Payments Sunshine Act (2010) was passed, requiring medical drug and device manufacturers to disclose payments and other transfers of value made to physicians, non-physician practitioners, and teaching hospitals. This law was put into place to promote transparency in our medical system - enabling the U.S. government and citizens to monitor for potential medical conflicts of interest. \nToday, every time a drug or medical device manufacturer makes a payment to a covered recipient, they must disclose the nature of that payment and the amount to the U.S. Centers for Medicare & Medicaid. Data about payments is then aggregated, reviewed by (and sometimes disputed by) recipients, corrected, and then published as an open government dataset. \n\nDefinitions for what counts as a reporting entity, a covered recipient, and a reportable activity have been expanding since the passing of the Physician Payments Sunshine Act as legislators have raised concerns over the degree of transparency of diversifying financial arrangements in the healthcare system. In 2020, the first settlement for violations to the Sunshine Act was announced, requiring Medtronic Inc. to pay $9.2 million to resolve allegations for failure to report. This served as a signal that enforcement is ramping up in the coming years. In 2022, the state of California passed a law requiring that medical practitioners disclose to patients that this data resource exists. \n\n## Setting Up Your Environment\n\n1. Run the code below to load today's data frames into your environment. \n\n\n::: {.cell document='show'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(RColorBrewer)\nopen_payments_original <- read_csv(\"https://openpaymentsdata.cms.gov/api/1/datastore/query/e6b17c6a-2534-4207-a4a1-6746a14911ff/0/download?conditions%5B0%5D%5Bproperty%5D=recipient_state&conditions%5B0%5D%5Bvalue%5D=MA&conditions%5B0%5D%5Boperator%5D=%3D&format=csv\") |>\n  select(Covered_Recipient_NPI,\n         Covered_Recipient_First_Name:Covered_Recipient_Last_Name,\n         Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_ID,\n         Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_Name,\n         Recipient_City,\n         Recipient_State,\n         Covered_Recipient_Specialty_1,\n         Total_Amount_of_Payment_USDollars,\n         Indicate_Drug_or_Biological_or_Device_or_Medical_Supply_1,\n         Product_Category_or_Therapeutic_Area_1,\n         Name_of_Drug_or_Biological_or_Device_or_Medical_Supply_1,\n         Date_of_Payment,\n         Nature_of_Payment_or_Transfer_of_Value,\n         Number_of_Payments_Included_in_Total_Amount,\n         Form_of_Payment_or_Transfer_of_Value,\n         Dispute_Status_for_Publication,\n         Payment_Publication_Date) |>\n  filter(!is.na(Covered_Recipient_NPI))\n```\n:::\n\n\n## Cleaning up this Data Frame\n\nEventually we are going to plot some timelines of payments to specific doctors, and we will need the `Date_of_Payment` column to be in a date-time format to do so. Right now however, these columns are strings. To get started with cleaning up this dataset, let's convert the date columns in `open_payments_original` to a date-time format. \n\n###### Question\n\n::: question\n\nWrite code to convert the `Date_of_Payment` and the `Payment_Publication_Date` column to date-time format. You should first determine the format of the date in `Date_of_Payment` and `Payment_Publication_Date` and then reference the [lubridate](https://evoldyn.gitlab.io/evomics-2018/ref-sheets/R_lubridate.pdf) to determine the corresponding function for parsing that date format. Finally, you will mutate the two columns. \n\n> Optional challenge: Rather than mutating each column, see if you can `mutate()` `across()` the two columns to complete this step. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Uncomment below to write code to convert to date-time format here. \n\n# open_payments_dates_cleaned <- open_payments_original |>\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\nTo confirm that we've done this right, we can check whether both of the dates are in the date-time format. \n\n###### Question\n\n::: question\n\nThe `is.Date` function returns `TRUE` if a vector is in date-time format, and `FALSE` if it is not. Below, I've selected the two columns in `open_payments` that contain the word \"date\" in the column header. Determine which `map()` function to use in order to return a **vector** that indicates whether these columns are in a date-time format. If you've done everything correctly, you should get the output below. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the appropriate map function below\n\nopen_payments_dates_cleaned |>\n  select(contains(\"date\")) |>\n  _____(is.Date)\n```\n:::\n\n::: {.cell document='solutions'}\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date_of_Payment Payment_Publication_Date \n                    TRUE                     TRUE \n```\n\n\n:::\n:::\n\n\n#######\n\n::: callout-tip\nCheck out what happens if you swap out your map function above for `map`, `map_chr`, or `map_int`. Can you figure out the relationship between these values and the original values?\n:::\n\nIt's important to note that the unit of observation in this dataset is not one medical practitioner, and it is not one manufacturer. Instead it is one payment from a manufacturer to a medical practitioner. That means that a medical practitioner can appear multiple times in the dataset if they've received multiple payments, and a medical drug or device manufacturer can appear multiple times in the dataset if they've disbursed multiple payments. We can identify medical practitioners with the `Covered_Recipient_NPI` column and manufacturers with the `Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_ID` column. \n\n...but we want to know more than just the ID of a medical practitioner. To identify which doctors are receiving the most money, we also want to know that practitioner's name, location, specialty, etc. Because practitioners' names are manually entered into a database every time a payment is made to them, sometimes the formatting of a practitioner's name entered for one payment can differ from how that same practitioner's name is formatted when entered for another payment. The same goes for other variables related to that practitioner. For instance, check out how the capitalization differs for the practitioner below. In some cases, there is a middle initial, while in others, there is a full middle name; in some cases, the practitioner's name is all capitalized, and in other cases it is not. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nopen_payments_dates_cleaned |>\n  filter(Covered_Recipient_NPI == 1003047473) |>\n  select(Covered_Recipient_First_Name, Covered_Recipient_Middle_Name, Covered_Recipient_Last_Name)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Covered_Recipient_First_Name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Covered_Recipient_Middle_Name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Covered_Recipient_Last_Name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Sherine\",\"2\":\"M\",\"3\":\"Hassey\"},{\"1\":\"Sherine\",\"2\":\"M\",\"3\":\"Hassey\"},{\"1\":\"Sherine\",\"2\":\"M\",\"3\":\"Hassey\"},{\"1\":\"Sherine\",\"2\":\"M\",\"3\":\"Hassey\"},{\"1\":\"Sherine\",\"2\":\"M\",\"3\":\"Hassey\"},{\"1\":\"SHERINE\",\"2\":\"Mary\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"Mary\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"Mary\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"NA\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"MARY\",\"3\":\"HASSEY-HALLIGAN\"},{\"1\":\"SHERINE\",\"2\":\"MARY\",\"3\":\"HASSEY-HALLIGAN\"},{\"1\":\"SHERINE\",\"2\":\"MARY\",\"3\":\"HASSEY-HALLIGAN\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"MARY\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"},{\"1\":\"SHERINE\",\"2\":\"M\",\"3\":\"HASSEY\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThis issue with formatting exists across this entire dataset. To ensure that similar entities appear in the right buckets when we aggregate the data, we are going to standardize capitalization across the whole dataset. We're also going to leave out the practitioner's middle initial since it is not always included (or included in the same way).\n\n###### Question\n\n::: question\n\nWrite code to `mutate` `across` all *character* columns such that strings in these columns are converted to **title case**. Title case refers to casing where the first letter in each word is capitalized and all other letters are lowercase.  Strings can be converted to title case with the function `str_to_title`. \n\nAfter you've done this, mutate a new column called `Covered_Recipient_Full_Name` that concatenates (hint: i.e. `paste()`) together `Covered_Recipient_First_Name` and `Covered_Recipient_Last_Name`. \n\nStore the resulting data frame in `open_payments`. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Uncomment below to clean up strings\n\n# open_payments <- open_payments_dates_cleaned |>\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\nAs we saw before, one `Covered_Recipient_NPI` was associated with multiple names if the names were capitalized in some cases and not others. Now that we've standardized the formatting of these names, there ideally should be one full name associated with every `Covered_Recipient_NPI`. Let's compare the length of unique `Covered_Recipient_NPI` values to the length of unique `Covered_Recipient_Full_Name` values to check whether this is the case. \n\n###### Question\n\n::: question\n\nWrite a function below called `num_unique`. The function should calculate the length of unique values in the vector passed to the argument `x`. \n\nBelow, I've selected the two columns in `open_payments` that we want to iterate this function over. Determine which `map()` function to use in order to return a **numeric vector** that indicates the length of unique values in each of these columns. If you've done everything correctly, you should get the output below. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_unique <- function(x) {\n # Write function here.\n}\n\nopen_payments |>\n  select(Covered_Recipient_NPI, Covered_Recipient_Full_Name) |>\n  _____(_____) # Determine which map function to call here.\n```\n:::\n\n::: {.cell document='solutions'}\n::: {.cell-output .cell-output-stdout}\n\n```\n      Covered_Recipient_NPI Covered_Recipient_Full_Name \n                      22244                       22316 \n```\n\n\n:::\n:::\n\n\n#######\n\nNotice that there are still more full names than `Covered_Recipient_NPI`s, which means that certain doctors have multiple names in this dataset. Below I've written some code to calculate the number unique full names listed for each `Covered_Recipient_NPI` and filter to the rows with more than one name. Can you identify some reasons why we might have multiple names listed for this same medical practitioner in this data frame?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nopen_payments |>\n  group_by(Covered_Recipient_NPI) |>\n  mutate(num_names = length(unique(Covered_Recipient_Full_Name))) |>\n  ungroup() |>\n  filter(num_names > 1) |>\n  select(Covered_Recipient_NPI, Covered_Recipient_Full_Name) |>\n  distinct() |>\n  arrange(desc(Covered_Recipient_NPI))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Covered_Recipient_NPI\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Covered_Recipient_Full_Name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1992991657\",\"2\":\"Lana Schumacher- Beal\"},{\"1\":\"1992991657\",\"2\":\"Lana Schumacher-Beal\"},{\"1\":\"1992991657\",\"2\":\"Lana Schumacher\"},{\"1\":\"1992932453\",\"2\":\"Jessica Ravikoff\"},{\"1\":\"1992932453\",\"2\":\"Jessica Allegretti\"},{\"1\":\"1992788160\",\"2\":\"Jonathan Slater\"},{\"1\":\"1992788160\",\"2\":\"John Slater\"},{\"1\":\"1992712178\",\"2\":\"Pasi Janne\"},{\"1\":\"1992712178\",\"2\":\"Pasi Antero Janne\"},{\"1\":\"1992059679\",\"2\":\"Carolyn Bagley\"},{\"1\":\"1992059679\",\"2\":\"Carolyn Rooney\"},{\"1\":\"1982669073\",\"2\":\"Chi Hae Kwan\"},{\"1\":\"1982669073\",\"2\":\"Chihae Kwan\"},{\"1\":\"1982655643\",\"2\":\"C Douglas Evans\"},{\"1\":\"1982655643\",\"2\":\"Charles Evans\"},{\"1\":\"1982632006\",\"2\":\"Lucyna Czarnota Dolliver\"},{\"1\":\"1982632006\",\"2\":\"Lucyna Czarnota-Dolliver\"},{\"1\":\"1972935476\",\"2\":\"Abd Almonem Abdelrahman\"},{\"1\":\"1972935476\",\"2\":\"Abd Abdelrahman\"},{\"1\":\"1972553121\",\"2\":\"Barbara Stricker-Friedman\"},{\"1\":\"1972553121\",\"2\":\"Barbara Stricker\"},{\"1\":\"1962818757\",\"2\":\"Cyntia Saenz Saenz\"},{\"1\":\"1962818757\",\"2\":\"Cyntia Saenz\"},{\"1\":\"1962516757\",\"2\":\"Dougals Grogan\"},{\"1\":\"1962516757\",\"2\":\"Douglas Grogan\"},{\"1\":\"1962100446\",\"2\":\"Caitlyn Murray\"},{\"1\":\"1962100446\",\"2\":\"Caitlyn O'brien\"},{\"1\":\"1962005835\",\"2\":\"Kyle Beres\"},{\"1\":\"1962005835\",\"2\":\"Kyle Marie Beres\"},{\"1\":\"1952680209\",\"2\":\"Mary-Ann Zappala\"},{\"1\":\"1952680209\",\"2\":\"Mary Ann Zappala\"},{\"1\":\"1952657462\",\"2\":\"Jaffar Ahmad Al Hilli\"},{\"1\":\"1952657462\",\"2\":\"Jaffar Hilli\"},{\"1\":\"1952364523\",\"2\":\"Krzysztof Kacprzak\"},{\"1\":\"1952364523\",\"2\":\"Krxysztof Kacprzak\"},{\"1\":\"1942933247\",\"2\":\"Emily Janse Van Rensburg\"},{\"1\":\"1942933247\",\"2\":\"Emily Leach\"},{\"1\":\"1942618061\",\"2\":\"Kelly Shin\"},{\"1\":\"1942618061\",\"2\":\"Kelly Britton\"},{\"1\":\"1942296108\",\"2\":\"Mary Jo Farmer\"},{\"1\":\"1942296108\",\"2\":\"Mary Farmer\"},{\"1\":\"1932717816\",\"2\":\"Amy Fraser\"},{\"1\":\"1932717816\",\"2\":\"Amy Lane\"},{\"1\":\"1932582178\",\"2\":\"Nathan Frenk\"},{\"1\":\"1932582178\",\"2\":\"Nathan Elie Frenk\"},{\"1\":\"1932219516\",\"2\":\"Steven Frank\"},{\"1\":\"1932219516\",\"2\":\"Stephen Frank\"},{\"1\":\"1922188580\",\"2\":\"David D'alessandro\"},{\"1\":\"1922188580\",\"2\":\"David D Alessandro\"},{\"1\":\"1912978644\",\"2\":\"Christoph Bechara\"},{\"1\":\"1912978644\",\"2\":\"Christopher Bechara\"},{\"1\":\"1912971284\",\"2\":\"Renata Ratusznik Martin\"},{\"1\":\"1912971284\",\"2\":\"Renata Ratusznik-Martin\"},{\"1\":\"1912535436\",\"2\":\"Richmond Woodward\"},{\"1\":\"1912535436\",\"2\":\"Richmond Manning Woodward\"},{\"1\":\"1912341330\",\"2\":\"Lianne Bartlett-Frye\"},{\"1\":\"1912341330\",\"2\":\"Lianne Bartlett Frye\"},{\"1\":\"1912257627\",\"2\":\"Kimberly O Neil\"},{\"1\":\"1912257627\",\"2\":\"Kimberly Oneil\"},{\"1\":\"1912164583\",\"2\":\"Ali Poyan Mehr\"},{\"1\":\"1912164583\",\"2\":\"Alice Poyan Mehr\"},{\"1\":\"1912157009\",\"2\":\"Hormoz Esmailzadeh\"},{\"1\":\"1912157009\",\"2\":\"Hormoz Solomon\"},{\"1\":\"1902635295\",\"2\":\"Rebecca Blackmore\"},{\"1\":\"1902635295\",\"2\":\"Rebecca Lambert\"},{\"1\":\"1902411820\",\"2\":\"Stephanie Reyes\"},{\"1\":\"1902411820\",\"2\":\"Stephanie Valdivia\"},{\"1\":\"1902243579\",\"2\":\"Eleanor Goldwaser\"},{\"1\":\"1902243579\",\"2\":\"Eleanor Tomczyk\"},{\"1\":\"1902076102\",\"2\":\"Leah Fiorante\"},{\"1\":\"1902076102\",\"2\":\"Leah Petrosino\"},{\"1\":\"1891845830\",\"2\":\"Carl Kahn\"},{\"1\":\"1891845830\",\"2\":\"C Kahn\"},{\"1\":\"1891729554\",\"2\":\"Paul Robert Sklarew\"},{\"1\":\"1891729554\",\"2\":\"Paul Sklarew\"},{\"1\":\"1891314506\",\"2\":\"Kaylie Murphy\"},{\"1\":\"1891314506\",\"2\":\"Kaylie Cronin\"},{\"1\":\"1891285409\",\"2\":\"Sarah Williams\"},{\"1\":\"1891285409\",\"2\":\"Sarah Miller\"},{\"1\":\"1891174991\",\"2\":\"Shian Liu\"},{\"1\":\"1891174991\",\"2\":\"Shian Peterson\"},{\"1\":\"1881771376\",\"2\":\"Mengche Chung\"},{\"1\":\"1881771376\",\"2\":\"Harry Chung\"},{\"1\":\"1881751394\",\"2\":\"Margaret Vallen Mashik\"},{\"1\":\"1881751394\",\"2\":\"Margaret Vallen Mashikian\"},{\"1\":\"1881751394\",\"2\":\"Margaret Vallen-Mashikian\"},{\"1\":\"1881709111\",\"2\":\"Andre Davila\"},{\"1\":\"1881709111\",\"2\":\"Andreluiz D'avila\"},{\"1\":\"1881709111\",\"2\":\"Andre D'avila\"},{\"1\":\"1881696375\",\"2\":\"James Lin\"},{\"1\":\"1881696375\",\"2\":\"Jamie Lin\"},{\"1\":\"1881653905\",\"2\":\"Erica Dee\"},{\"1\":\"1881653905\",\"2\":\"Erica Puglielli\"},{\"1\":\"1871978502\",\"2\":\"Josie Bazemore\"},{\"1\":\"1871978502\",\"2\":\"Josie Montegaard\"},{\"1\":\"1871933119\",\"2\":\"Nakul Ravikumar\"},{\"1\":\"1871933119\",\"2\":\"Ravikumar Nakul\"},{\"1\":\"1871889428\",\"2\":\"Laura Voicu\"},{\"1\":\"1871889428\",\"2\":\"Laura Vickers\"},{\"1\":\"1871226217\",\"2\":\"Navya Reddy Perkit\"},{\"1\":\"1871226217\",\"2\":\"Navya Perkit\"},{\"1\":\"1871153205\",\"2\":\"Patrick O'neil\"},{\"1\":\"1871153205\",\"2\":\"Patrick Oneil\"},{\"1\":\"1871150151\",\"2\":\"Manali Shah\"},{\"1\":\"1871150151\",\"2\":\"Manali Sheth\"},{\"1\":\"1861903403\",\"2\":\"Carla Vertentes\"},{\"1\":\"1861903403\",\"2\":\"Carla Mcinerney\"},{\"1\":\"1861734949\",\"2\":\"Bridget Burgess\"},{\"1\":\"1861734949\",\"2\":\"Bridget Driscoll\"},{\"1\":\"1861481657\",\"2\":\"Paul Skudder Jr\"},{\"1\":\"1861481657\",\"2\":\"Paul Skudder\"},{\"1\":\"1861156663\",\"2\":\"Sherry Duggan-Torrisi\"},{\"1\":\"1861156663\",\"2\":\"Sherry Duggan\"},{\"1\":\"1851357313\",\"2\":\"Richard Waldman\"},{\"1\":\"1851357313\",\"2\":\"Richard Waldman Pc\"},{\"1\":\"1851300230\",\"2\":\"Angela Ahuja\"},{\"1\":\"1851300230\",\"2\":\"Angel Ahuja\"},{\"1\":\"1851008130\",\"2\":\"Jonnathan Reyes Luna\"},{\"1\":\"1851008130\",\"2\":\"Johnathan Reyes Luna\"},{\"1\":\"1841716503\",\"2\":\"Rachel Stadelmann\"},{\"1\":\"1841716503\",\"2\":\"Rachel Lehouillier\"},{\"1\":\"1841217411\",\"2\":\"Patti Anne Richard\"},{\"1\":\"1841217411\",\"2\":\"Patti Richard\"},{\"1\":\"1831668243\",\"2\":\"Ashley Baptista\"},{\"1\":\"1831668243\",\"2\":\"Ashley Laranjo\"},{\"1\":\"1831656958\",\"2\":\"Brittney Tarantino\"},{\"1\":\"1831656958\",\"2\":\"Brittney Armour\"},{\"1\":\"1831283118\",\"2\":\"Maria Dayaw\"},{\"1\":\"1831283118\",\"2\":\"Maria Pilar Elisa Dayaw\"},{\"1\":\"1831197748\",\"2\":\"Raymond Paul Blanc\"},{\"1\":\"1831197748\",\"2\":\"Raymond Paul-Blanc\"},{\"1\":\"1821578584\",\"2\":\"Laurena Valente\"},{\"1\":\"1821578584\",\"2\":\"Laurena Nicolo\"},{\"1\":\"1821478496\",\"2\":\"Swati Kumar\"},{\"1\":\"1821478496\",\"2\":\"Swati Mandleywala\"},{\"1\":\"1821309188\",\"2\":\"Laith Al Rabadi\"},{\"1\":\"1821309188\",\"2\":\"Laith Farah Al Rabadi\"},{\"1\":\"1821258179\",\"2\":\"Bryon Gentile Ii\"},{\"1\":\"1821258179\",\"2\":\"Bryon Gentile\"},{\"1\":\"1821227661\",\"2\":\"Maria Gayanilo\"},{\"1\":\"1821227661\",\"2\":\"Maria Aurora Lim\"},{\"1\":\"1821103896\",\"2\":\"Fred Shapiro\"},{\"1\":\"1821103896\",\"2\":\"Freddie Shapiro\"},{\"1\":\"1821045550\",\"2\":\"Abdulfata Elshaar\"},{\"1\":\"1821045550\",\"2\":\"Abdulfatah Elshaar\"},{\"1\":\"1811961196\",\"2\":\"Hamedreza Danesh\"},{\"1\":\"1811961196\",\"2\":\"Hamid Danesh\"},{\"1\":\"1811459837\",\"2\":\"Kelsey Honshideler\"},{\"1\":\"1811459837\",\"2\":\"Kelsey Shideler\"},{\"1\":\"1811277163\",\"2\":\"Renee Gomez Chlebica\"},{\"1\":\"1811277163\",\"2\":\"Renee Gomez\"},{\"1\":\"1811242985\",\"2\":\"Burcu Gul\"},{\"1\":\"1811242985\",\"2\":\"Burcu Gul Weiner\"},{\"1\":\"1811204480\",\"2\":\"Meryl Hunter\"},{\"1\":\"1811204480\",\"2\":\"Meryl Gray\"},{\"1\":\"1801887997\",\"2\":\"Shih-Te Wen\"},{\"1\":\"1801887997\",\"2\":\"Shih Te Wen\"},{\"1\":\"1801506985\",\"2\":\"Wendy Haynes\"},{\"1\":\"1801506985\",\"2\":\"Wendy Dixon\"},{\"1\":\"1801403043\",\"2\":\"Stephanie Nader\"},{\"1\":\"1801403043\",\"2\":\"Stephanie Semaan\"},{\"1\":\"1801048921\",\"2\":\"Kate Obrien\"},{\"1\":\"1801048921\",\"2\":\"Katie O'brien\"},{\"1\":\"1790728889\",\"2\":\"Leah Mckinnon Howe\"},{\"1\":\"1790728889\",\"2\":\"Leah Mckinnon-Howe\"},{\"1\":\"1790126746\",\"2\":\"Sarah Lee\"},{\"1\":\"1790126746\",\"2\":\"Bohyun Lee\"},{\"1\":\"1780870659\",\"2\":\"Adrian Velasquez\"},{\"1\":\"1780870659\",\"2\":\"Adrian De Guzman Velasquez\"},{\"1\":\"1780849943\",\"2\":\"Jacques Hagop Sulahian\"},{\"1\":\"1780849943\",\"2\":\"Jacques Sulahian\"},{\"1\":\"1780624213\",\"2\":\"William Fiske\"},{\"1\":\"1780624213\",\"2\":\"William Wyman Fiske\"},{\"1\":\"1780613935\",\"2\":\"Jeffrey Gorodetsky\"},{\"1\":\"1780613935\",\"2\":\"Jeffery Gorodetsky\"},{\"1\":\"1780060889\",\"2\":\"Kristen Meiggs\"},{\"1\":\"1780060889\",\"2\":\"Kristen Russell\"},{\"1\":\"1780034371\",\"2\":\"Jennifer Stjean\"},{\"1\":\"1780034371\",\"2\":\"Jennifer St.jean\"},{\"1\":\"1770987448\",\"2\":\"Erica Bruehlmann\"},{\"1\":\"1770987448\",\"2\":\"Erica Lundgren\"},{\"1\":\"1770815425\",\"2\":\"Jessica Mcpherson\"},{\"1\":\"1770815425\",\"2\":\"Jessica Isenberg\"},{\"1\":\"1770108037\",\"2\":\"Mohammad El Kilany\"},{\"1\":\"1770108037\",\"2\":\"Mohammad Elkilany\"},{\"1\":\"1770009490\",\"2\":\"Leah Soll\"},{\"1\":\"1770009490\",\"2\":\"Leah Franzone\"},{\"1\":\"1760589147\",\"2\":\"Shiao-Ang Shih\"},{\"1\":\"1760589147\",\"2\":\"Shiao Ang Shih\"},{\"1\":\"1760589147\",\"2\":\"Shiao - Ang Shih\"},{\"1\":\"1760006431\",\"2\":\"Amanda Baltazar Sezer\"},{\"1\":\"1760006431\",\"2\":\"Amanda Baltazar\"},{\"1\":\"1750645537\",\"2\":\"Rama El-Yafawi\"},{\"1\":\"1750645537\",\"2\":\"Rama El Yafawi\"},{\"1\":\"1750599700\",\"2\":\"Sidney Kahn\"},{\"1\":\"1750599700\",\"2\":\"Sidney Kahn Iv\"},{\"1\":\"1750357430\",\"2\":\"Ronnie Alterman\"},{\"1\":\"1750357430\",\"2\":\"Ron Alterman\"},{\"1\":\"1750328290\",\"2\":\"Mariel Del Rio-Cadorette\"},{\"1\":\"1750328290\",\"2\":\"Mariel Del Rio Cadorette\"},{\"1\":\"1750114518\",\"2\":\"Emily Guptill\"},{\"1\":\"1750114518\",\"2\":\"Emily Powers\"},{\"1\":\"1730926510\",\"2\":\"Jillian Macle\"},{\"1\":\"1730926510\",\"2\":\"Jillian Bunis\"},{\"1\":\"1730781915\",\"2\":\"Emily Weibel\"},{\"1\":\"1730781915\",\"2\":\"Emily Kitchen\"},{\"1\":\"1730591504\",\"2\":\"Ainsley Mccowan\"},{\"1\":\"1730591504\",\"2\":\"Ainsley Jones\"},{\"1\":\"1730316936\",\"2\":\"Ama Okey Igwe\"},{\"1\":\"1730316936\",\"2\":\"Ama Okey-Igwe\"},{\"1\":\"1730186693\",\"2\":\"Padraic Mccahill\"},{\"1\":\"1730186693\",\"2\":\"Pat Mccahill\"},{\"1\":\"1730179623\",\"2\":\"Andrew David Simkin\"},{\"1\":\"1730179623\",\"2\":\"Andrew Simkin\"},{\"1\":\"1730130568\",\"2\":\"Susan Phillips Gray\"},{\"1\":\"1730130568\",\"2\":\"Susan Phillips-Gray\"},{\"1\":\"1720302672\",\"2\":\"Jami Parsons Malloy\"},{\"1\":\"1720302672\",\"2\":\"Jami Parsons\"},{\"1\":\"1720005481\",\"2\":\"Kathleen Kirchmeier Kroessler\"},{\"1\":\"1720005481\",\"2\":\"Kathleen Kirchmeier-Kroessler\"},{\"1\":\"1710969050\",\"2\":\"Kala Seetharaman\"},{\"1\":\"1710969050\",\"2\":\"Kala Seetharman\"},{\"1\":\"1710547385\",\"2\":\"Amanda Diffin\"},{\"1\":\"1710547385\",\"2\":\"Amanda Gustafson\"},{\"1\":\"1710320791\",\"2\":\"Julie Birch\"},{\"1\":\"1710320791\",\"2\":\"Julie Bulman\"},{\"1\":\"1710155114\",\"2\":\"Mary Fitzhugh\"},{\"1\":\"1710155114\",\"2\":\"Mary Day Fitzhugh\"},{\"1\":\"1700873130\",\"2\":\"Geoffrey Burns\"},{\"1\":\"1700873130\",\"2\":\"Jeffrey Burne\"},{\"1\":\"1700864303\",\"2\":\"James Oholleran\"},{\"1\":\"1700864303\",\"2\":\"James O'holleran\"},{\"1\":\"1700853231\",\"2\":\"Minnietta Pilgrim\"},{\"1\":\"1700853231\",\"2\":\"Minniet Pilgrim\"},{\"1\":\"1700394590\",\"2\":\"Ashley Brown\"},{\"1\":\"1700394590\",\"2\":\"Ashley Pickering Brown\"},{\"1\":\"1700040516\",\"2\":\"Seung Jae Lee\"},{\"1\":\"1700040516\",\"2\":\"Seung Lee\"},{\"1\":\"1689933392\",\"2\":\"Rafael Bloise Espinal\"},{\"1\":\"1689933392\",\"2\":\"Rafael Bloise\"},{\"1\":\"1689665309\",\"2\":\"Christoph Kwolek\"},{\"1\":\"1689665309\",\"2\":\"Christopher Kwolek\"},{\"1\":\"1689653800\",\"2\":\"Sara Kleiner-Goudey\"},{\"1\":\"1689653800\",\"2\":\"Sara Kleiner Goudey\"},{\"1\":\"1689166126\",\"2\":\"Kaila Sinclair\"},{\"1\":\"1689166126\",\"2\":\"Kaila Gottlick\"},{\"1\":\"1689015539\",\"2\":\"Shahrzad Sims\"},{\"1\":\"1689015539\",\"2\":\"Shahrzad Rahbar\"},{\"1\":\"1679666564\",\"2\":\"Sherri St Pierre\"},{\"1\":\"1679666564\",\"2\":\"Sherri St. Pierre\"},{\"1\":\"1679539506\",\"2\":\"James Bleiler\"},{\"1\":\"1679539506\",\"2\":\"Jamie Bleiler\"},{\"1\":\"1679044218\",\"2\":\"Lily Sylvia\"},{\"1\":\"1679044218\",\"2\":\"Lily Mulcahy\"},{\"1\":\"1669865242\",\"2\":\"Hans Van Lancker\"},{\"1\":\"1669865242\",\"2\":\"Hans Vanlancker\"},{\"1\":\"1669768164\",\"2\":\"Robert Oconnor\"},{\"1\":\"1669768164\",\"2\":\"Robert O'connor\"},{\"1\":\"1669639811\",\"2\":\"July Lau-Deza\"},{\"1\":\"1669639811\",\"2\":\"July Lau Deza\"},{\"1\":\"1669600482\",\"2\":\"Racheal Tagoe\"},{\"1\":\"1669600482\",\"2\":\"Rachel Tagoe\"},{\"1\":\"1669538591\",\"2\":\"Steven Spiegel\"},{\"1\":\"1669538591\",\"2\":\"Stephen Spiegel\"},{\"1\":\"1669438057\",\"2\":\"Misha Michelle Faustina\"},{\"1\":\"1669438057\",\"2\":\"Misha Faustina\"},{\"1\":\"1669177556\",\"2\":\"Alyssa Heiser\"},{\"1\":\"1669177556\",\"2\":\"Alyssa, Heiser\"},{\"1\":\"1659995181\",\"2\":\"Kate Mcpherson-Murch\"},{\"1\":\"1659995181\",\"2\":\"Kate Mcpherson\"},{\"1\":\"1659667673\",\"2\":\"Kshitukumar Agrawal\"},{\"1\":\"1659667673\",\"2\":\"Kshitijkumar Agrawal\"},{\"1\":\"1659548303\",\"2\":\"Katie Mcbrine\"},{\"1\":\"1659548303\",\"2\":\"Katie Duncker\"},{\"1\":\"1659540664\",\"2\":\"Maria Clarinda Buencamino Francisco\"},{\"1\":\"1659540664\",\"2\":\"Maria Clarinda Buencamino-Francisco\"},{\"1\":\"1649533928\",\"2\":\"Kristin Dorsi\"},{\"1\":\"1649533928\",\"2\":\"Kristin D'orsi\"},{\"1\":\"1649240755\",\"2\":\"Mohammad Mostafavi\"},{\"1\":\"1649240755\",\"2\":\"Muhammad Mostafavi\"},{\"1\":\"1639200256\",\"2\":\"Anton Shcherbenia\"},{\"1\":\"1639200256\",\"2\":\"Anton Shcherbina\"},{\"1\":\"1639131352\",\"2\":\"Jon Trister\"},{\"1\":\"1639131352\",\"2\":\"John Trister\"},{\"1\":\"1629561170\",\"2\":\"John Benjamin Arevalo\"},{\"1\":\"1629561170\",\"2\":\"John Arevalo\"},{\"1\":\"1629206214\",\"2\":\"Finnian Mc Causland\"},{\"1\":\"1629206214\",\"2\":\"Finnian Mccausland\"},{\"1\":\"1629198189\",\"2\":\"Christopher Baugh\"},{\"1\":\"1629198189\",\"2\":\"Chris Baugh\"},{\"1\":\"1629098496\",\"2\":\"Mohamed Och\"},{\"1\":\"1629098496\",\"2\":\"Mohamad Och\"},{\"1\":\"1629024617\",\"2\":\"Kathryn Donesa-Zuzak\"},{\"1\":\"1629024617\",\"2\":\"Kathryn Donesa Zuzak\"},{\"1\":\"1619963592\",\"2\":\"John O'neil\"},{\"1\":\"1619963592\",\"2\":\"John Oneil\"},{\"1\":\"1619297124\",\"2\":\"Nicole Landzberg\"},{\"1\":\"1619297124\",\"2\":\"Nicole Grossman\"},{\"1\":\"1609935725\",\"2\":\"Elise Damiano\"},{\"1\":\"1609935725\",\"2\":\"Elise D'amiano\"},{\"1\":\"1609859230\",\"2\":\"Maria Delrosario\"},{\"1\":\"1609859230\",\"2\":\"Maria Del Rosario\"},{\"1\":\"1609851476\",\"2\":\"Roxanne Gardner\"},{\"1\":\"1609851476\",\"2\":\"Roxane Gardner\"},{\"1\":\"1609186410\",\"2\":\"Andrea Gibson\"},{\"1\":\"1609186410\",\"2\":\"Andrea Llosa\"},{\"1\":\"1609048909\",\"2\":\"Hector Tamez Aguilar\"},{\"1\":\"1609048909\",\"2\":\"Hector Aguilar\"},{\"1\":\"1598740607\",\"2\":\"Mohammad Esteghamati\"},{\"1\":\"1598740607\",\"2\":\"Mohammad Hadi Esteghamati\"},{\"1\":\"1598723512\",\"2\":\"Soheil Amin Hanjani\"},{\"1\":\"1598723512\",\"2\":\"Soheil Aminhanjani\"},{\"1\":\"1598711160\",\"2\":\"Karl Dsilva\"},{\"1\":\"1598711160\",\"2\":\"Karl D'silva\"},{\"1\":\"1598261745\",\"2\":\"Aileen Souza\"},{\"1\":\"1598261745\",\"2\":\"Aileen Caceres\"},{\"1\":\"1588777072\",\"2\":\"Nyssa Connell\"},{\"1\":\"1588777072\",\"2\":\"Nyssa D'hedouville\"},{\"1\":\"1588722979\",\"2\":\"Adnan El Amine\"},{\"1\":\"1588722979\",\"2\":\"Adnan El-Amine\"},{\"1\":\"1588616775\",\"2\":\"Kimberly Mcnulty\"},{\"1\":\"1588616775\",\"2\":\"Kimberly Mooney-Mcnulty\"},{\"1\":\"1588616775\",\"2\":\"Kimberly Mooney Mcnulty\"},{\"1\":\"1588351217\",\"2\":\"Jacklyn Beynor\"},{\"1\":\"1588351217\",\"2\":\"Jacklyn Snow\"},{\"1\":\"1588336564\",\"2\":\"Dawn Kirsch\"},{\"1\":\"1588336564\",\"2\":\"Dawn Resurreccion\"},{\"1\":\"1578995866\",\"2\":\"Lin Chia\"},{\"1\":\"1578995866\",\"2\":\"Lin Ma\"},{\"1\":\"1578902243\",\"2\":\"Anthony Jordan\"},{\"1\":\"1578902243\",\"2\":\"Antonio Giordano\"},{\"1\":\"1578815387\",\"2\":\"Allie Smith\"},{\"1\":\"1578815387\",\"2\":\"Allie Shea\"},{\"1\":\"1578721049\",\"2\":\"Mariann Padron\"},{\"1\":\"1578721049\",\"2\":\"Mariann Padron Gleich\"},{\"1\":\"1578225520\",\"2\":\"Ileana Quaglietta\"},{\"1\":\"1578225520\",\"2\":\"Ileana Mather\"},{\"1\":\"1578153599\",\"2\":\"Jessica Naruka\"},{\"1\":\"1578153599\",\"2\":\"Jessica Brown\"},{\"1\":\"1578080651\",\"2\":\"Catherine Chace\"},{\"1\":\"1578080651\",\"2\":\"Catherine Luz\"},{\"1\":\"1578067021\",\"2\":\"Andrew Wall\"},{\"1\":\"1578067021\",\"2\":\"Anew Wall\"},{\"1\":\"1568788040\",\"2\":\"Kara Lamattima\"},{\"1\":\"1568788040\",\"2\":\"Kara Lamattina\"},{\"1\":\"1568566420\",\"2\":\"Robert Obrien\"},{\"1\":\"1568566420\",\"2\":\"Robert O'brien\"},{\"1\":\"1568409936\",\"2\":\"Rasmia Ahmed\"},{\"1\":\"1568409936\",\"2\":\"Rasmia Khalid\"},{\"1\":\"1568039949\",\"2\":\"Stephanie Hardy\"},{\"1\":\"1568039949\",\"2\":\"Stephanie San Giovanni\"},{\"1\":\"1558636373\",\"2\":\"Jennifer Difalco\"},{\"1\":\"1558636373\",\"2\":\"Jennifer Hall Difalco\"},{\"1\":\"1558532689\",\"2\":\"Allen Hwang\"},{\"1\":\"1558532689\",\"2\":\"Allen L Hwang\"},{\"1\":\"1548577471\",\"2\":\"Nicole Sopp\"},{\"1\":\"1548577471\",\"2\":\"Nicole Psaltis\"},{\"1\":\"1548227960\",\"2\":\"Christoph Cannon\"},{\"1\":\"1548227960\",\"2\":\"Christopher Cannon\"},{\"1\":\"1548218712\",\"2\":\"David Shein\"},{\"1\":\"1548218712\",\"2\":\"Dave Shein\"},{\"1\":\"1548203219\",\"2\":\"Jose Monteiro\"},{\"1\":\"1548203219\",\"2\":\"Joseph Monteiro\"},{\"1\":\"1538574488\",\"2\":\"Chih Yang\"},{\"1\":\"1538574488\",\"2\":\"Justin Yang\"},{\"1\":\"1538436209\",\"2\":\"Santiago Lozano Calderon\"},{\"1\":\"1538436209\",\"2\":\"Santiago Lozano-Calderon\"},{\"1\":\"1538415526\",\"2\":\"Krzysztof Rosadzinsk\"},{\"1\":\"1538415526\",\"2\":\"Krzysztof Rosadzinski\"},{\"1\":\"1538105903\",\"2\":\"Sharon Cicchetti\"},{\"1\":\"1538105903\",\"2\":\"Sharon Rousseau\"},{\"1\":\"1528589462\",\"2\":\"Tonya O'neil\"},{\"1\":\"1528589462\",\"2\":\"Tonya Oneil\"},{\"1\":\"1528320975\",\"2\":\"Jessica Lin\"},{\"1\":\"1528320975\",\"2\":\"Jessica Kim\"},{\"1\":\"1528265824\",\"2\":\"Kathyrn Masselam Hatch\"},{\"1\":\"1528265824\",\"2\":\"Kathryn Hatch\"},{\"1\":\"1528094372\",\"2\":\"Vanessa Van Stee\"},{\"1\":\"1528094372\",\"2\":\"Vanessa Vanstee\"},{\"1\":\"1518279702\",\"2\":\"Andrea Leigh Shah\"},{\"1\":\"1518279702\",\"2\":\"Andrea Shah\"},{\"1\":\"1518278290\",\"2\":\"Laura Amorese-O'connell\"},{\"1\":\"1518278290\",\"2\":\"Laura Amorese-Oconnell\"},{\"1\":\"1518213370\",\"2\":\"Dana Bastarache\"},{\"1\":\"1518213370\",\"2\":\"Dana Roiter\"},{\"1\":\"1508838525\",\"2\":\"Viraj Shroff-Mehta\"},{\"1\":\"1508838525\",\"2\":\"Viraj Shroff Mehta\"},{\"1\":\"1508824475\",\"2\":\"Nina Blumenthal\"},{\"1\":\"1508824475\",\"2\":\"Nina Carol Blumenthal\"},{\"1\":\"1508437492\",\"2\":\"Maria Alejandra Luna Cuadros\"},{\"1\":\"1508437492\",\"2\":\"Maria Luna Cuadros\"},{\"1\":\"1508327784\",\"2\":\"Manar Abdel Rahim\"},{\"1\":\"1508327784\",\"2\":\"Manar Roy\"},{\"1\":\"1508252123\",\"2\":\"May Jean Counsilman\"},{\"1\":\"1508252123\",\"2\":\"May Counsilman\"},{\"1\":\"1508107806\",\"2\":\"Ary Lex Auguste\"},{\"1\":\"1508107806\",\"2\":\"Ary-Lex Auguste\"},{\"1\":\"1497898316\",\"2\":\"Alexander Pang\"},{\"1\":\"1497898316\",\"2\":\"Alex Pang\"},{\"1\":\"1497808802\",\"2\":\"Pamela Develis\"},{\"1\":\"1497808802\",\"2\":\"Pamela Devellis\"},{\"1\":\"1497789754\",\"2\":\"Francis Dambrosio\"},{\"1\":\"1497789754\",\"2\":\"Francis D'ambrosio\"},{\"1\":\"1497746010\",\"2\":\"Patrick Blomberg\"},{\"1\":\"1497746010\",\"2\":\"Pat Blomberg\"},{\"1\":\"1497163661\",\"2\":\"Suman Bhushan Koganti\"},{\"1\":\"1497163661\",\"2\":\"Suman Koganti\"},{\"1\":\"1487775375\",\"2\":\"John Meola\"},{\"1\":\"1487775375\",\"2\":\"John Meola Jr\"},{\"1\":\"1487107769\",\"2\":\"Chih Kang David Liou\"},{\"1\":\"1487107769\",\"2\":\"Chih Kang Liou\"},{\"1\":\"1487107769\",\"2\":\"Chih David Liou\"},{\"1\":\"1487002614\",\"2\":\"Rivka Ihejirika Lomedico\"},{\"1\":\"1487002614\",\"2\":\"Rivka Ihejirika\"},{\"1\":\"1477535896\",\"2\":\"Douglas E Peterson\"},{\"1\":\"1477535896\",\"2\":\"Douglas Peterson\"},{\"1\":\"1477014884\",\"2\":\"Heinrich-Karl Greenblatt\"},{\"1\":\"1477014884\",\"2\":\"Heinrich Karl Greenblatt\"},{\"1\":\"1467637884\",\"2\":\"Miret Ibrahim\"},{\"1\":\"1467637884\",\"2\":\"Miret Habashy Ibrahim\"},{\"1\":\"1467637884\",\"2\":\"Miret Habashy-Ibrahim\"},{\"1\":\"1457796484\",\"2\":\"Tony Tong\"},{\"1\":\"1457796484\",\"2\":\"Haoyu Tong\"},{\"1\":\"1457311821\",\"2\":\"Neil Oregan\"},{\"1\":\"1457311821\",\"2\":\"Neil O'regan\"},{\"1\":\"1447861281\",\"2\":\"Meghan Habershaw\"},{\"1\":\"1447861281\",\"2\":\"Meghan Heald\"},{\"1\":\"1447758735\",\"2\":\"Yen Vu\"},{\"1\":\"1447758735\",\"2\":\"Yen Lauer\"},{\"1\":\"1447733894\",\"2\":\"Olivia Smith\"},{\"1\":\"1447733894\",\"2\":\"Olivia Alpert\"},{\"1\":\"1447258470\",\"2\":\"Michael Curran\"},{\"1\":\"1447258470\",\"2\":\"Michael Currie\"},{\"1\":\"1447248042\",\"2\":\"Ann Marie Joyce\"},{\"1\":\"1447248042\",\"2\":\"Ann Joyce\"},{\"1\":\"1437802659\",\"2\":\"Mariya Demyanchuk\"},{\"1\":\"1437802659\",\"2\":\"Mariya Kirik\"},{\"1\":\"1437704707\",\"2\":\"Rachel Loring\"},{\"1\":\"1437704707\",\"2\":\"Rachel Pimental\"},{\"1\":\"1437652138\",\"2\":\"Karima Brahim\"},{\"1\":\"1437652138\",\"2\":\"Karima Peretti\"},{\"1\":\"1437637535\",\"2\":\"Fnu Avinashsingh Eswarsingh\"},{\"1\":\"1437637535\",\"2\":\"Fnu Eswarsingh\"},{\"1\":\"1437413242\",\"2\":\"Jerry Chi Chuan Fang\"},{\"1\":\"1437413242\",\"2\":\"Chi Chuan Fang\"},{\"1\":\"1437413242\",\"2\":\"Jerry Fang\"},{\"1\":\"1437178993\",\"2\":\"J Reimherr\"},{\"1\":\"1437178993\",\"2\":\"John Reimherr\"},{\"1\":\"1437118627\",\"2\":\"Maryellen Taplin\"},{\"1\":\"1437118627\",\"2\":\"Mary-Ellen Taplin\"},{\"1\":\"1427600238\",\"2\":\"Chole Stanko\"},{\"1\":\"1427600238\",\"2\":\"Chloe Stanko\"},{\"1\":\"1427499615\",\"2\":\"Jae Lee\"},{\"1\":\"1427499615\",\"2\":\"Jaeyoung Lee\"},{\"1\":\"1427379825\",\"2\":\"Sophia Airhart\"},{\"1\":\"1427379825\",\"2\":\"Sophia Lahusen Bair\"},{\"1\":\"1427292861\",\"2\":\"Reiner See\"},{\"1\":\"1427292861\",\"2\":\"Reiner Henson See\"},{\"1\":\"1427288091\",\"2\":\"Julia Sinclair\"},{\"1\":\"1427288091\",\"2\":\"Julie Sinclair\"},{\"1\":\"1427198787\",\"2\":\"Vimal Patel\"},{\"1\":\"1427198787\",\"2\":\"Vimalkumar Patel\"},{\"1\":\"1427080191\",\"2\":\"Florence Bahtiarian\"},{\"1\":\"1427080191\",\"2\":\"Florence Bejian\"},{\"1\":\"1427056795\",\"2\":\"Kelly Ocallahan\"},{\"1\":\"1427056795\",\"2\":\"Kelly O Callahan\"},{\"1\":\"1427048206\",\"2\":\"Pei-Shan Zhao\"},{\"1\":\"1427048206\",\"2\":\"Pei Shan Zhao\"},{\"1\":\"1417262015\",\"2\":\"Pascal Scemama De Gialluly\"},{\"1\":\"1417262015\",\"2\":\"Pascal Scemama Degialluly\"},{\"1\":\"1417262015\",\"2\":\"Pascal Scemama-De-Gialluly\"},{\"1\":\"1417256314\",\"2\":\"Heidi Anderson\"},{\"1\":\"1417256314\",\"2\":\"Heidi Anderson-Dockter\"},{\"1\":\"1417256314\",\"2\":\"Heidi Anderson Dockter\"},{\"1\":\"1417218215\",\"2\":\"Nithya Minnah\"},{\"1\":\"1417218215\",\"2\":\"Nithya Chickmagalur\"},{\"1\":\"1417118621\",\"2\":\"Haeseong Park\"},{\"1\":\"1417118621\",\"2\":\"Haesong Park\"},{\"1\":\"1407961840\",\"2\":\"Satya-Krishna Ramachandran\"},{\"1\":\"1407961840\",\"2\":\"Satya Krishna Ramachandran\"},{\"1\":\"1407955172\",\"2\":\"Maureen Achebe\"},{\"1\":\"1407955172\",\"2\":\"Maureen Okam\"},{\"1\":\"1407879679\",\"2\":\"Nancyann Walsh\"},{\"1\":\"1407879679\",\"2\":\"Nancy Ann Walsh\"},{\"1\":\"1407810906\",\"2\":\"Rosemary Bill Fleury\"},{\"1\":\"1407810906\",\"2\":\"Rosemary Bill- Fleury\"},{\"1\":\"1407803299\",\"2\":\"Vani Reddi\"},{\"1\":\"1407803299\",\"2\":\"Vani Sree Reddi\"},{\"1\":\"1407348683\",\"2\":\"Jerusa Cabral-Deoliveira\"},{\"1\":\"1407348683\",\"2\":\"Jerusa Deoliveira\"},{\"1\":\"1407313026\",\"2\":\"Meghan Keegan\"},{\"1\":\"1407313026\",\"2\":\"Meghan Stephen\"},{\"1\":\"1396985768\",\"2\":\"Chi Hung Lee\"},{\"1\":\"1396985768\",\"2\":\"Chi-Hung Lee\"},{\"1\":\"1396452702\",\"2\":\"Jessica Robinson\"},{\"1\":\"1396452702\",\"2\":\"Jessica Merriel\"},{\"1\":\"1396292603\",\"2\":\"Ruben Tresgallo\"},{\"1\":\"1396292603\",\"2\":\"Ruben Tresgallo Pares\"},{\"1\":\"1396039343\",\"2\":\"Jennifer Piel\"},{\"1\":\"1396039343\",\"2\":\"Jennifer Jackson\"},{\"1\":\"1386887487\",\"2\":\"Bobbie Jo Casey\"},{\"1\":\"1386887487\",\"2\":\"Bobbie Casey\"},{\"1\":\"1386639946\",\"2\":\"Lucille Shore Schein\"},{\"1\":\"1386639946\",\"2\":\"Lucille Shore - Schein\"},{\"1\":\"1386321149\",\"2\":\"Khristine Morin\"},{\"1\":\"1386321149\",\"2\":\"Khristine Roxo\"},{\"1\":\"1386202281\",\"2\":\"Amanda Stebbins\"},{\"1\":\"1386202281\",\"2\":\"Amanda Grasso\"},{\"1\":\"1386185874\",\"2\":\"Ana Garrido Castro\"},{\"1\":\"1386185874\",\"2\":\"Ana Garrido-Castro\"},{\"1\":\"1376525063\",\"2\":\"Gloriane Afonso Fede\"},{\"1\":\"1376525063\",\"2\":\"Gloriane Afonso-Fede\"},{\"1\":\"1376505222\",\"2\":\"Gloria Moussa Gabour\"},{\"1\":\"1376505222\",\"2\":\"Gloria Moussa-Gabour\"},{\"1\":\"1376196600\",\"2\":\"Kendal Lin\"},{\"1\":\"1376196600\",\"2\":\"Kendal Haddad\"},{\"1\":\"1366670770\",\"2\":\"Martin Dib\"},{\"1\":\"1366670770\",\"2\":\"Martin Dib Marambio\"},{\"1\":\"1366637605\",\"2\":\"Meeta Nguyen\"},{\"1\":\"1366637605\",\"2\":\"Meeta Shah\"},{\"1\":\"1366569329\",\"2\":\"James Salemis\"},{\"1\":\"1366569329\",\"2\":\"Jamie Salemis\"},{\"1\":\"1366529539\",\"2\":\"Marianna Bobrysheva\"},{\"1\":\"1366529539\",\"2\":\"Marianna Gaitsgory\"},{\"1\":\"1366440794\",\"2\":\"Mohamad El Zaru\"},{\"1\":\"1366440794\",\"2\":\"Mohamad El-Zaru\"},{\"1\":\"1366440794\",\"2\":\"Muhammad El Zaru\"},{\"1\":\"1366003865\",\"2\":\"Kristen Corcoran\"},{\"1\":\"1366003865\",\"2\":\"Kristen Higgins\"},{\"1\":\"1356622047\",\"2\":\"Glenda Berman\"},{\"1\":\"1356622047\",\"2\":\"Glenda Savitz\"},{\"1\":\"1356490163\",\"2\":\"Lauren Alberta Wszolek\"},{\"1\":\"1356490163\",\"2\":\"Lauren Alberta-Wszolek\"},{\"1\":\"1356401871\",\"2\":\"Domenic Dangelo\"},{\"1\":\"1356401871\",\"2\":\"Domenic D'angelo\"},{\"1\":\"1356332639\",\"2\":\"Yi Bin Chen\"},{\"1\":\"1356332639\",\"2\":\"Yi-Bin Chen\"},{\"1\":\"1346760394\",\"2\":\"Adriana Medeiros\"},{\"1\":\"1346760394\",\"2\":\"Adrianna Medeiros\"},{\"1\":\"1346693413\",\"2\":\"Syed Mohsin Mazhar\"},{\"1\":\"1346693413\",\"2\":\"Syed Mazhar\"},{\"1\":\"1346682556\",\"2\":\"Brittany Holmes\"},{\"1\":\"1346682556\",\"2\":\"Brittany Murray\"},{\"1\":\"1326611385\",\"2\":\"Tanya Lamoureux\"},{\"1\":\"1326611385\",\"2\":\"Tanya Markos\"},{\"1\":\"1326448036\",\"2\":\"John Michael Cycz\"},{\"1\":\"1326448036\",\"2\":\"John-Michael Cycz\"},{\"1\":\"1326085366\",\"2\":\"Michelle Odonoghue\"},{\"1\":\"1326085366\",\"2\":\"Michelle O'donoghue\"},{\"1\":\"1316919400\",\"2\":\"Cheryl D'souza\"},{\"1\":\"1316919400\",\"2\":\"Cheryl Dsouza\"},{\"1\":\"1316919400\",\"2\":\"Cheryl D Souza\"},{\"1\":\"1316289127\",\"2\":\"Michelle Schoettler\"},{\"1\":\"1316289127\",\"2\":\"Michelle Long\"},{\"1\":\"1316189269\",\"2\":\"Cyrus Yazdi\"},{\"1\":\"1316189269\",\"2\":\"Cyrus Ahmadi Yazdi\"},{\"1\":\"1306882741\",\"2\":\"Wynne Huang\"},{\"1\":\"1306882741\",\"2\":\"Winifred Huang\"},{\"1\":\"1306419536\",\"2\":\"Housam Eddin Alhariri\"},{\"1\":\"1306419536\",\"2\":\"Housam Eddine Alhariri\"},{\"1\":\"1306286265\",\"2\":\"Mariam Karimeddiny\"},{\"1\":\"1306286265\",\"2\":\"Mariam Karimeddiny-Kalish\"},{\"1\":\"1295921120\",\"2\":\"Melanie Araujo\"},{\"1\":\"1295921120\",\"2\":\"Melanie Araujo-Sampaio\"},{\"1\":\"1295114775\",\"2\":\"Alexander Young\"},{\"1\":\"1295114775\",\"2\":\"Alex Young\"},{\"1\":\"1285884395\",\"2\":\"Diane Ah-Kine Ng Poon Hing\"},{\"1\":\"1285884395\",\"2\":\"Diane Ah Kine Ng Poon Hing\"},{\"1\":\"1285828798\",\"2\":\"Paula Ugalde\"},{\"1\":\"1285828798\",\"2\":\"Paula Ugalde Figueroa\"},{\"1\":\"1285817494\",\"2\":\"Pablo Pinzon\"},{\"1\":\"1285817494\",\"2\":\"Pablo Quintero Pinzon\"},{\"1\":\"1285691238\",\"2\":\"Julie Baker\"},{\"1\":\"1285691238\",\"2\":\"Julie Geary\"},{\"1\":\"1285690479\",\"2\":\"Brandon Earp\"},{\"1\":\"1285690479\",\"2\":\"Branden Earp\"},{\"1\":\"1285608398\",\"2\":\"Carlos Del Rio\"},{\"1\":\"1285608398\",\"2\":\"Carlos Delrio\"},{\"1\":\"1285602052\",\"2\":\"Inad Bahhady\"},{\"1\":\"1285602052\",\"2\":\"Imad Bahhady\"},{\"1\":\"1285258236\",\"2\":\"Cris Martin Jacoba\"},{\"1\":\"1285258236\",\"2\":\"Cris Jacoba\"},{\"1\":\"1285175497\",\"2\":\"Grace Hannawi-Tadros\"},{\"1\":\"1285175497\",\"2\":\"Grace Hannawi\"},{\"1\":\"1285036434\",\"2\":\"Sarimer Sanchez Gorbea\"},{\"1\":\"1285036434\",\"2\":\"Sarimer Sanchez\"},{\"1\":\"1275976995\",\"2\":\"Cynthia Kelley Grady\"},{\"1\":\"1275976995\",\"2\":\"Cynthia Kelley-Grady\"},{\"1\":\"1275886285\",\"2\":\"Barbara St John\"},{\"1\":\"1275886285\",\"2\":\"Barbara Stjohn\"},{\"1\":\"1275683021\",\"2\":\"Anna Simon-Villalba\"},{\"1\":\"1275683021\",\"2\":\"Anna Simon-Villaloa\"},{\"1\":\"1275586851\",\"2\":\"Tarek Elsharkawy\"},{\"1\":\"1275586851\",\"2\":\"Tarek El Sharkawy\"},{\"1\":\"1275570228\",\"2\":\"Lori Laffel\"},{\"1\":\"1275570228\",\"2\":\"Lori Michelle Laffel\"},{\"1\":\"1275389645\",\"2\":\"Edwin Owolo\"},{\"1\":\"1275389645\",\"2\":\"Dr. Edwin Owolo\"},{\"1\":\"1275108722\",\"2\":\"Shudeshna Chen\"},{\"1\":\"1275108722\",\"2\":\"Shudeshna Bashir\"},{\"1\":\"1275102667\",\"2\":\"Stephanie Hendley\"},{\"1\":\"1275102667\",\"2\":\"Stephanie Doherty\"},{\"1\":\"1275089377\",\"2\":\"Leanne Veary\"},{\"1\":\"1275089377\",\"2\":\"Leanne Waksman\"},{\"1\":\"1265882708\",\"2\":\"Amanda Saini\"},{\"1\":\"1265882708\",\"2\":\"Amanda Nyisztor\"},{\"1\":\"1265866032\",\"2\":\"Emrey Moskowitz-Porath\"},{\"1\":\"1265866032\",\"2\":\"Emrey Moskowitz Porath\"},{\"1\":\"1265861769\",\"2\":\"Jonathan Benitez-Gonzalez\"},{\"1\":\"1265861769\",\"2\":\"Jonathan Beni\"},{\"1\":\"1265725501\",\"2\":\"Tofool Al Ghanem\"},{\"1\":\"1265725501\",\"2\":\"Tofool Alghanem\"},{\"1\":\"1265424758\",\"2\":\"Stephanie Paris Whitney\"},{\"1\":\"1265424758\",\"2\":\"Stephanie Paris-Whitney\"},{\"1\":\"1265402515\",\"2\":\"Killian Oconnell\"},{\"1\":\"1265402515\",\"2\":\"Killian O'connell\"},{\"1\":\"1265164511\",\"2\":\"Kayla Delle Chiaie\"},{\"1\":\"1265164511\",\"2\":\"Kayla Dasilva\"},{\"1\":\"1265092696\",\"2\":\"Kaylee Henriques\"},{\"1\":\"1265092696\",\"2\":\"Kaylee Wampler\"},{\"1\":\"1255680997\",\"2\":\"Saif Alenizi\"},{\"1\":\"1255680997\",\"2\":\"Saif Muhsin\"},{\"1\":\"1255064747\",\"2\":\"Madhan Srinivasan Kumar\"},{\"1\":\"1255064747\",\"2\":\"Madhan Kumar\"},{\"1\":\"1245613751\",\"2\":\"Oluwatobi Ogbechie\"},{\"1\":\"1245613751\",\"2\":\"Oluwatobi Ogbechie-Godec\"},{\"1\":\"1245613751\",\"2\":\"Oluwatobi Ogbechie Godec\"},{\"1\":\"1245483965\",\"2\":\"Adeeb Al-Quthami\"},{\"1\":\"1245483965\",\"2\":\"Adeeb Alquthami\"},{\"1\":\"1245298157\",\"2\":\"Ya Tze Tong\"},{\"1\":\"1245298157\",\"2\":\"Ya Tong\"},{\"1\":\"1245282508\",\"2\":\"Xiang-Yang Guo\"},{\"1\":\"1245282508\",\"2\":\"Xiang Yang Guo\"},{\"1\":\"1235423260\",\"2\":\"David Sola-Del Valle\"},{\"1\":\"1235423260\",\"2\":\"David Valle\"},{\"1\":\"1235163643\",\"2\":\"Ting-Hsu Chen\"},{\"1\":\"1235163643\",\"2\":\"Ting Hsu Chen\"},{\"1\":\"1235105792\",\"2\":\"Mary Mattei\"},{\"1\":\"1235105792\",\"2\":\"Mary-Lee Mattei\"},{\"1\":\"1225192552\",\"2\":\"Anne Kelly\"},{\"1\":\"1225192552\",\"2\":\"Anne Marie Kelly\"},{\"1\":\"1215542964\",\"2\":\"Nancy Moniz\"},{\"1\":\"1215542964\",\"2\":\"Nancy Morais\"},{\"1\":\"1215469861\",\"2\":\"Hector Lopez Marquez\"},{\"1\":\"1215469861\",\"2\":\"Hector Marquez\"},{\"1\":\"1215199542\",\"2\":\"Erin Kate Dooley\"},{\"1\":\"1215199542\",\"2\":\"Erin Dooley\"},{\"1\":\"1205489390\",\"2\":\"Sara Murphy\"},{\"1\":\"1205489390\",\"2\":\"Sara Cataldo\"},{\"1\":\"1205179777\",\"2\":\"Narjust Florez\"},{\"1\":\"1205179777\",\"2\":\"Narjust Duma\"},{\"1\":\"1194788224\",\"2\":\"Paul Feuerstein\"},{\"1\":\"1194788224\",\"2\":\"Paul Feverstein\"},{\"1\":\"1194221713\",\"2\":\"Margaret Shields\"},{\"1\":\"1194221713\",\"2\":\"Margaret Pennington\"},{\"1\":\"1184756934\",\"2\":\"Youjin Jeong\"},{\"1\":\"1184756934\",\"2\":\"Youjin Natalie Jeong\"},{\"1\":\"1184730012\",\"2\":\"Gracia Perez Lirio\"},{\"1\":\"1184730012\",\"2\":\"Gracia Perez-Lirio\"},{\"1\":\"1184690711\",\"2\":\"Sukran Ergin-Yanmaz\"},{\"1\":\"1184690711\",\"2\":\"Sukran Ergin\"},{\"1\":\"1184690711\",\"2\":\"Sukran Ergin Yanmaz\"},{\"1\":\"1184682759\",\"2\":\"Deepthi De Silva\"},{\"1\":\"1184682759\",\"2\":\"Deepthi Desilva\"},{\"1\":\"1174905665\",\"2\":\"Fabiola Martinez\"},{\"1\":\"1174905665\",\"2\":\"Fabiola Ramirez Martinez\"},{\"1\":\"1174905665\",\"2\":\"Fabiola Ramirez\"},{\"1\":\"1174818363\",\"2\":\"Maureen Spring\"},{\"1\":\"1174818363\",\"2\":\"Maureen Dziura\"},{\"1\":\"1174510465\",\"2\":\"Kimberly Browne Martin\"},{\"1\":\"1174510465\",\"2\":\"Kimberly Browne-Martin\"},{\"1\":\"1164860151\",\"2\":\"Tomasz Stry Jewski\"},{\"1\":\"1164860151\",\"2\":\"Tomasz Stryjewski\"},{\"1\":\"1164850475\",\"2\":\"Grace Da Cunha\"},{\"1\":\"1164850475\",\"2\":\"Grace Dacunha\"},{\"1\":\"1164823365\",\"2\":\"Afsaneh Rad\"},{\"1\":\"1164823365\",\"2\":\"Afsaneh Shahrokhi Rad\"},{\"1\":\"1164531422\",\"2\":\"Bhalchandra Parulkar\"},{\"1\":\"1164531422\",\"2\":\"Bhalchand Parulkar\"},{\"1\":\"1164076899\",\"2\":\"Julia Feldman\"},{\"1\":\"1164076899\",\"2\":\"Julia Sylvia\"},{\"1\":\"1164075768\",\"2\":\"Zeeshan Gulam Hussain\"},{\"1\":\"1164075768\",\"2\":\"Zeeshan Hussain\"},{\"1\":\"1154852473\",\"2\":\"Saad Al Kadhi\"},{\"1\":\"1154852473\",\"2\":\"Saad Al-Kadhi\"},{\"1\":\"1154820421\",\"2\":\"Brithny Dolcius\"},{\"1\":\"1154820421\",\"2\":\"Brithny Imafidon\"},{\"1\":\"1154557650\",\"2\":\"Aparna Raj\"},{\"1\":\"1154557650\",\"2\":\"Aparna Parikh\"},{\"1\":\"1154548097\",\"2\":\"Catherine Loeser-Murphy\"},{\"1\":\"1154548097\",\"2\":\"Catherine Murphy\"},{\"1\":\"1144622747\",\"2\":\"Jelana Vucijak\"},{\"1\":\"1144622747\",\"2\":\"Jelena Simpson\"},{\"1\":\"1144427584\",\"2\":\"Paven Mallur\"},{\"1\":\"1144427584\",\"2\":\"Pavan Mallur\"},{\"1\":\"1144398645\",\"2\":\"Sonya Patel\"},{\"1\":\"1144398645\",\"2\":\"Sonya Sheth\"},{\"1\":\"1144289166\",\"2\":\"Geetanjali Akerkar\"},{\"1\":\"1144289166\",\"2\":\"Geetanjal Akerkar\"},{\"1\":\"1144287236\",\"2\":\"Irma Rasmussen\"},{\"1\":\"1144287236\",\"2\":\"Irma Berrio\"},{\"1\":\"1134850902\",\"2\":\"Marie Renee Lucien-Jean\"},{\"1\":\"1134850902\",\"2\":\"Marie-Renee Lucien-Jean\"},{\"1\":\"1134787294\",\"2\":\"Courtney Coppola\"},{\"1\":\"1134787294\",\"2\":\"Courtney Welch\"},{\"1\":\"1134298540\",\"2\":\"Smita Kherde\"},{\"1\":\"1134298540\",\"2\":\"Smita Chaudhari\"},{\"1\":\"1124251657\",\"2\":\"Rebecca Posner\"},{\"1\":\"1124251657\",\"2\":\"Rebecca Mueller\"},{\"1\":\"1114982402\",\"2\":\"Syed Asad Rizvi\"},{\"1\":\"1114982402\",\"2\":\"Syed Rizvi\"},{\"1\":\"1114973872\",\"2\":\"Deborah Giardina\"},{\"1\":\"1114973872\",\"2\":\"Deborah Mchugh\"},{\"1\":\"1114971694\",\"2\":\"Tai Lee Temple\"},{\"1\":\"1114971694\",\"2\":\"Tai Temple\"},{\"1\":\"1114904497\",\"2\":\"Jay Fleitman\"},{\"1\":\"1114904497\",\"2\":\"Jason Fleitman\"},{\"1\":\"1114787298\",\"2\":\"Jessica Ryther\"},{\"1\":\"1114787298\",\"2\":\"Jessica Stoyle\"},{\"1\":\"1114455102\",\"2\":\"Jessica Awerman\"},{\"1\":\"1114455102\",\"2\":\"Jessica Gonzalez\"},{\"1\":\"1104085505\",\"2\":\"Sujata Holman\"},{\"1\":\"1104085505\",\"2\":\"Sujata Ramamurthy\"},{\"1\":\"1093944332\",\"2\":\"Jiri Brabec\"},{\"1\":\"1093944332\",\"2\":\"George Brabec\"},{\"1\":\"1093821092\",\"2\":\"Nora Schwartz Martin\"},{\"1\":\"1093821092\",\"2\":\"Nora Schwartz-Martin\"},{\"1\":\"1093754780\",\"2\":\"Simon Melnick\"},{\"1\":\"1093754780\",\"2\":\"Vsevolod Melnikov\"},{\"1\":\"1093426306\",\"2\":\"Marie-Christine Nadon\"},{\"1\":\"1093426306\",\"2\":\"Marie Christine Nadon\"},{\"1\":\"1083788277\",\"2\":\"Arturo Villarreal Verdecia\"},{\"1\":\"1083788277\",\"2\":\"Arturo Villarreal-Verdecia\"},{\"1\":\"1083719371\",\"2\":\"Cheryl Depaolo Jost\"},{\"1\":\"1083719371\",\"2\":\"Cheryl Jost\"},{\"1\":\"1083154710\",\"2\":\"Jennifer Bento\"},{\"1\":\"1083154710\",\"2\":\"Jennifer Byrnes\"},{\"1\":\"1083096358\",\"2\":\"Syed M Khurram Owais\"},{\"1\":\"1083096358\",\"2\":\"Syed M. Khurram Owais\"},{\"1\":\"1083096358\",\"2\":\"Syed Owais\"},{\"1\":\"1083095806\",\"2\":\"Mary Bui\"},{\"1\":\"1083095806\",\"2\":\"Mary Vo\"},{\"1\":\"1073949061\",\"2\":\"Andrea Farber\"},{\"1\":\"1073949061\",\"2\":\"Andrea Reppucci\"},{\"1\":\"1073789079\",\"2\":\"Antje Barreveld\"},{\"1\":\"1073789079\",\"2\":\"Antje Herlyn\"},{\"1\":\"1073594123\",\"2\":\"Jurgen Craig Muller\"},{\"1\":\"1073594123\",\"2\":\"Jurgen Craig-Mueller\"},{\"1\":\"1073594123\",\"2\":\"Jurgen Craig-Muller\"},{\"1\":\"1073521753\",\"2\":\"S Kajencki\"},{\"1\":\"1073521753\",\"2\":\"Stephen Kajencki\"},{\"1\":\"1073503603\",\"2\":\"Alexandra Kimball\"},{\"1\":\"1073503603\",\"2\":\"Alexa Kimball\"},{\"1\":\"1063933240\",\"2\":\"Ahmad Nawid Latifi\"},{\"1\":\"1063933240\",\"2\":\"Ahmad Latifi\"},{\"1\":\"1063853968\",\"2\":\"Audra Henley\"},{\"1\":\"1063853968\",\"2\":\"Audra Lafleur\"},{\"1\":\"1063662799\",\"2\":\"Christine Taliercio\"},{\"1\":\"1063662799\",\"2\":\"Christine Castro\"},{\"1\":\"1063461572\",\"2\":\"Saraswathi Devi Muppana\"},{\"1\":\"1063461572\",\"2\":\"Saraswathi Muppana\"},{\"1\":\"1063024693\",\"2\":\"Naomi Weitz\"},{\"1\":\"1063024693\",\"2\":\"Naomi Errath\"},{\"1\":\"1053529453\",\"2\":\"Rose Bernal-Larioza\"},{\"1\":\"1053529453\",\"2\":\"Rose Bernal Larioza\"},{\"1\":\"1053368324\",\"2\":\"Rebecca Osullivan Hunnewell\"},{\"1\":\"1053368324\",\"2\":\"Rebecca O'sullivan-Hunnewell\"},{\"1\":\"1053304469\",\"2\":\"Lindsay Philip\"},{\"1\":\"1053304469\",\"2\":\"Linsey Philip\"},{\"1\":\"1043669591\",\"2\":\"Sara Rose-Sauld\"},{\"1\":\"1043669591\",\"2\":\"Sara Rose\"},{\"1\":\"1043510423\",\"2\":\"Marilyne Jones Jenkins\"},{\"1\":\"1043510423\",\"2\":\"Marilyne Jones-Jenkins\"},{\"1\":\"1043409451\",\"2\":\"Steven Ross\"},{\"1\":\"1043409451\",\"2\":\"Stephen Ross\"},{\"1\":\"1033524806\",\"2\":\"Allison Ferris\"},{\"1\":\"1033524806\",\"2\":\"Allison Hopkinson\"},{\"1\":\"1033472352\",\"2\":\"Erin O'shea\"},{\"1\":\"1033472352\",\"2\":\"Erin O'shea-Paudel\"},{\"1\":\"1033472352\",\"2\":\"Erin O'shea Paudel\"},{\"1\":\"1033194048\",\"2\":\"Paul Dambrosio\"},{\"1\":\"1033194048\",\"2\":\"Paul D'ambrosio\"},{\"1\":\"1033169610\",\"2\":\"Khalilull Khatri\"},{\"1\":\"1033169610\",\"2\":\"Khalil Khatri\"},{\"1\":\"1023123429\",\"2\":\"Doug Rett\"},{\"1\":\"1023123429\",\"2\":\"Douglas Rett\"},{\"1\":\"1023055076\",\"2\":\"Ian Fredric Sklaver\"},{\"1\":\"1023055076\",\"2\":\"Ian Sklaver\"},{\"1\":\"1023014958\",\"2\":\"Irma Cruz-Gonzalez\"},{\"1\":\"1023014958\",\"2\":\"Irma Cruz Gonzalez\"},{\"1\":\"1013903822\",\"2\":\"Babak Eliassi Rad\"},{\"1\":\"1013903822\",\"2\":\"Babak Eliassi-Rad\"},{\"1\":\"1013469428\",\"2\":\"Kendra Gagliardi\"},{\"1\":\"1013469428\",\"2\":\"Kendra Lund\"},{\"1\":\"1013391408\",\"2\":\"Nicole Cerio\"},{\"1\":\"1013391408\",\"2\":\"Nicole Horn\"},{\"1\":\"1013368349\",\"2\":\"Karla Calzada Morales\"},{\"1\":\"1013368349\",\"2\":\"Karla Calzada\"},{\"1\":\"1013320209\",\"2\":\"Harish Seethapathy\"},{\"1\":\"1013320209\",\"2\":\"Harish Shanthanu Seethapathy\"},{\"1\":\"1013310242\",\"2\":\"Ella Botchevar\"},{\"1\":\"1013310242\",\"2\":\"Ella Osborn\"},{\"1\":\"1003992629\",\"2\":\"Erin Fitzpatrick\"},{\"1\":\"1003992629\",\"2\":\"Erin Mackey\"},{\"1\":\"1003966540\",\"2\":\"Neda Shah Hosseini\"},{\"1\":\"1003966540\",\"2\":\"Neda Shah-Hosseini\"},{\"1\":\"1003942749\",\"2\":\"M. Richard Pavao\"},{\"1\":\"1003942749\",\"2\":\"M Richard Pavao\"},{\"1\":\"1003848532\",\"2\":\"John Looney\"},{\"1\":\"1003848532\",\"2\":\"John Joseph Looney\"},{\"1\":\"1003379215\",\"2\":\"Mohamed Ramadan\"},{\"1\":\"1003379215\",\"2\":\"Mohamed Ehab Ramadan\"},{\"1\":\"1003229097\",\"2\":\"Kiran Agarwal Harding\"},{\"1\":\"1003229097\",\"2\":\"Kiran Agarwal-Harding\"},{\"1\":\"1003093246\",\"2\":\"Patrick Assioun\"},{\"1\":\"1003093246\",\"2\":\"Fathi Assioun\"},{\"1\":\"1003047473\",\"2\":\"Sherine Hassey\"},{\"1\":\"1003047473\",\"2\":\"Sherine Hassey-Halligan\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nBecause of these issues, it is important that we use the `Covered_Recipient_NPI` to identify doctors vs. the full name.\n\nNow that we have a final cleaned up `open_payments` data frame, let's remove the other data frames from our environment.  \n\n\n::: {.cell document='show'}\n\n```{.r .cell-code}\nrm(open_payments_original, open_payments_dates_cleaned)\n```\n:::\n\n\n...and on to analysis. \n\n## Data Analysis\n\nUltimately, our aim is to produce a number of tables and plots *for each of the ten MA-based doctors that received the most money from medical drug and device manufacturers in 2024.* This means that one of our first analysis steps is to identify those 10 medical practitioners. \n\n###### Question\n\n::: question\n\nWrite code to determine the 10 medical practitioners that received the most money from drug and device manufacturers in 2024, and store your results in `top_10_doctors`. Your final data frame should have 10 rows and columns for `Covered_Recipient_NPI` and `sum_total_payments`. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Uncomment below and write data wrangling code\n\n#top_10_doctors <- open_payments |>\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\nRight now the values that we will eventually want to iterate over in our analysis are stored as columns in a dataframe. ...but remember that the family of `purrr` functions allows us to apply a function to each element of a vector or list. We want to create a series of vectors from these columns that we can iterate over. We will use the `pull()` function to do this. \n\n###### Question\n\n::: question\n\nCreate a vector of `top_10_doctors_ids` from `top_10_doctors`, using the `pull()` function. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Uncomment and write code below to pull the top 10 doctor IDs into a vector\n\n# top_10_doctors_ids <- top_10_doctors |>\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\nWe also want a vector of doctor names associated with each of these IDs, but remember that there can be multiple names for a single doctor in this dataset. With this in mind, we are going to create a vector of the **first listed name** for a given `Covered_Recipient_NPI` in the dataset. Taking the first listed name as the doctor's name is an imperfect solution. The first listed name could be a misspelling. It could be a doctor's maiden name that they have since changed. This is a temporary solution, and we would want to confirm that we have the correct name for each doctor before publishing any of these findings. \n\n###### Question\n\n::: question\n\nCreate a vector containing the names of the doctors associated with the IDs in `top_10_doctors_ids`. First, define the function `get_doctor_name`. This function will:\n\n  1.  take a `doctor_id` as an argument, \n  2.  filter `open_payments` to that ID, \n  3.  summarize the `first()` `Covered_Recipient_Full_Name` listed for that ID,\n  4. `pull()` the name value\n  \nOnce this function has been defined, select the appropriate `map()` function to iterate `top_10_doctors_ids` through `get_doctor_name` and store the resulting **character vector** in `top_10_doctors_names`. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_doctor_name <- function(doctor_id){\n  # Write function code here\n}\n\n# Iterate the top_10_doctors_ids vector through get_doctor_name and store the results in a character vector\n\n# top_10_doctors_names <- \n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n######\n\nNow that we have the vectors we want to iterate over, we are ready to start defining our first functions. \n\n### What kind of payments did MA-based doctors receive in 2024?\n\nTo get started, let's define a function that filters `open_payments` to a given doctor ID, and then calculates how much of each kind of payment has been paid to that doctor. Here is an example of what that data wrangling code would look like for a specific `Covered_Recipient_NPI`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nopen_payments |>\n  filter(Covered_Recipient_NPI == 1003801903) |>\n  group_by(Nature_of_Payment_or_Transfer_of_Value) |>\n  summarize(num_payments = \n              sum(Number_of_Payments_Included_in_Total_Amount),\n            total_payments = sum(Total_Amount_of_Payment_USDollars))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Nature_of_Payment_or_Transfer_of_Value\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"num_payments\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_payments\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Acquisitions\",\"2\":\"1\",\"3\":\"2114077\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n###### Question\n\n::: question\n\nWrap the above code in a function named `calculate_payment_type_amts`. Rather than filtering to 1003801903, filter based on the value passed to an argument named `doctor_id`.\n\nThen, use the `map()` function to apply `calculate_payment_type_amts` to each element in the `top_10_doctors_ids` vector. Running this code should return a list of 10 data frames. \n\nFinally, pipe in `set_names(top_10_doctors_names)` to set the names for each data frame in the list to the doctor's name.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write calculate_payment_type_amts function here\n\n# Iterate calculate_payment_type_amts over top_10_doctors_ids and set names to top_10_doctors_names\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\n### When were payments made to each of these doctors in 2024? \n\nHere's an example of a plot we could create to answer this question for one doctor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  open_payments |>\n    filter(Covered_Recipient_NPI == 1003801903) |>\n    ggplot(aes(x = day(Date_of_Payment), \n               y = \"\", \n               fill = Total_Amount_of_Payment_USDollars)) +\n    geom_jitter(pch = 21, size = 2, color = \"black\") +\n    theme_minimal() +\n    labs(title = \"Roger Hajjar\", \n         y = \"\", \n         x = \"Day\",\n         fill = \"Payment Amount\") +\n    scale_y_discrete(limits = rev) +\n    scale_fill_distiller(palette = \"BuPu\", direction = 1, labels = scales::comma) +\n    facet_wrap(vars(month(Date_of_Payment, label = TRUE)), nrow = 4) \n```\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n###### Question\n\n::: question\n\nWrite a function named `payments_calendar`. The function should:\n\n  1. Take a `doctor_id` and `doctor_name` as arguments\n  2. Filter `open_payments` to the doctor's ID\n  3. Create payment calendar plot modeled after the one above. \n  4. Set the title of the plot to the doctor's name\n  \nAfter you've written this function, select the appropriate map function to apply `payments_calendar` to each element in the `top_10_doctors_ids` vector and `top_10_doctors_names` vector. \n\n> Optional Challenge: Extend your code to include the first listed specialty for each top 10 doctor as a subtitle in each plot. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write payments_calendar function here\n\n# Iterate payments_calendar over top_10_doctors_ids and top_10_doctors_ids to create 10 plots\n```\n:::\n\n::: {.cell document='solutions'}\n\n:::\n\n\n#######\n\n### Which manufacturers paid MA-based doctors in 2024, and through what forms of payment?\n\nFinally, let's define a function that filters `open_payments` to a given doctor ID and determines how much the doctor received in compensation from different manufacturers, along with the forms of payment from each manufacturer. To do so, we will need to aggregate the data by `Covered_Recipient_NPI`, `Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_Name`, and `Form_of_Payment_or_Transfer_of_Value ` and calculate the total payments associated with each grouping.\n\n###### Question\n\n::: question\n\nWrite a function named `calculate_manufacturer_payments`. The function should:\n\n  1. Take a `doctor_id` as an argument\n  2. Filter `open_payments` to that ID\n  3. Aggregate the filtered data by `Covered_Recipient_NPI`,\n             `Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_Name`, and\n             `Form_of_Payment_or_Transfer_of_Value `\n  4. Calculate the total amount of payments for each grouping\n  5. Sort the resulting data frame in descending order by the total amount of payments. \n\nAfter you've written this function, use the `map_df()` function to apply `calculate_manufacturer_payments` to each element in the `top_10_doctors_ids` vector. Note how this returns one data frame rather than a list of 10 data frames. \n\nPlot your resulting data frame as a column plot, attempting (to the best of your ability) to match the formatting of the plot below.\n\n> Optional Challenge: List the doctor's full name in each facet band, rather than the the doctor's ID. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write calculate_manufacturer_payments function here\n\n# Iterate calculate_manufacturer_payments over top_10_doctors_ids here\n\n# Plot resulting data frame here\n```\n:::\n\n::: {.cell document='solutions'}\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n#######\n\n::: question\n\n**Extra Credit (+5 points on lab)**\n\nWrite a function named `drugs_and_devices`. The function should create a plot that shows how much money a given doctor was paid for each drug or biological device for which they received payment in 2024, grouped by the nature of payment. \n\nAfter you've written this function, use a map function to apply `drugs_and_devices` to each element in the `top_10_doctors_ids` vector. You should produce 10 plots - one for each doctor. \n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create function here\n\n# Apply function here\n```\n:::\n\n::: {.cell document='solutions'}\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-1.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[2]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-2.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[3]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-3.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[4]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-4.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[5]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-5.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[6]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-6.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[7]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-7.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[8]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-8.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[9]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-9.png){width=960}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[10]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab8_files/figure-html/unnamed-chunk-28-10.png){width=960}\n:::\n:::\n\n\n#######\n\n::: callout-caution\n## Ethical Considerations\n\nOn September 29, 2022, California Governor Gavin Newsom signed a bill requiring that all physicians and surgeons notify patients about the Open Payments database on their initial visit. Specifically, patients will be given the following notice:  \"The Open Payments database is a federal tool used to search payments made by drug and device companies to physicians and teaching hospitals. It can be found at https://openpaymentsdata.cms.gov,\" and will be prompted to sign and date that they have received the notice. \nThis policy was developed in response to concerns that, while the Open Payments database includes a great deal of information that might impact how citizens make decisions about their healthcare, very few people knew of the database. Do you think this is a good solution to this problem? Should other states follow suit? Do you see any drawbacks to this policy? Share your ideas on our `sds-192-discussions` Slack channel.\n\n:::\n\n\n\n\n",
    "supporting": [
      "lab8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}